{
	"info": {
		"_postman_id": "f5b7e3d7-9c21-4a7e-8c9c-e09c3419fa8d",
		"name": "Azki Reservation System",
		"description": "API collection for testing the Azki Reservation System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user@azki.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Authenticate a user and receive a JWT token."
					},
					"response": []
				}
			],
			"description": "Authentication-related API endpoints."
		},
		{
			"name": "Reservations",
			"item": [
				{
					"name": "Create Reservation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user@azki.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/reservations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reservations"
							]
						},
						"description": "Request a new reservation for the nearest available time slot."
					},
					"response": []
				},
				{
					"name": "Get Reservation Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/reservations/status/{{requestId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reservations",
								"status",
								"{{requestId}}"
							]
						},
						"description": "Check the status of a reservation request."
					},
					"response": []
				},
				{
					"name": "Cancel Reservation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/reservations/{{reservationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"reservations",
								"{{reservationId}}"
							]
						},
						"description": "Cancel an existing reservation."
					},
					"response": []
				}
			],
			"description": "Reservation-related API endpoints."
		},
		{
			"name": "Monitoring & Health",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actuator/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actuator",
								"health"
							]
						},
						"description": "Check the health status of the application."
					},
					"response": []
				},
				{
					"name": "Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actuator/metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actuator",
								"metrics"
							]
						},
						"description": "View available metrics endpoints."
					},
					"response": []
				},
				{
					"name": "Queue Length Metric",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actuator/metrics/reservation.queue.length",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actuator",
								"metrics",
								"reservation.queue.length"
							]
						},
						"description": "Check the current reservation queue length."
					},
					"response": []
				}
			],
			"description": "Endpoints for monitoring application health and metrics."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Extract JWT token from login response and set as environment variable",
					"if (pm.response.code === 200 && pm.info.requestName === \"Login\") {",
					"    const responseJson = pm.response.json();",
					"    if (responseJson.token) {",
					"        pm.environment.set(\"authToken\", responseJson.token);",
					"        console.log(\"Auth token extracted and saved to environment variables\");",
					"    }",
					"}",
					"",
					"// Extract requestId from create reservation response",
					"if (pm.response.code === 202 && pm.info.requestName === \"Create Reservation\") {",
					"    const responseJson = pm.response.json();",
					"    if (responseJson.requestId) {",
					"        pm.environment.set(\"requestId\", responseJson.requestId);",
					"        console.log(\"Request ID extracted and saved to environment variables\");",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}

