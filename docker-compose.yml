version: '3.8'

services:
  app:
    build: .
    restart: always
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/reservationdb
      - SPRING_DATASOURCE_USERNAME=azki
      - SPRING_DATASOURCE_PASSWORD=azki!p@ss
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_LIQUIBASE_ENABLED=true
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate
      - LOGGING_FILE_NAME=/app/logs/reservation-app.log
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - app-logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=reservationdb
      - POSTGRES_USER=azki
      - POSTGRES_PASSWORD=azki!p@ss
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # Optional: Add initialization scripts if needed
      # - ./src/main/resources/db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U reservation_user -d reservationdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  app-logs:
  postgres-data:
  redis-data:
